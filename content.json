[{"title":"CE-101 資訊部門之功能及職責劃分","date":"2017-05-30T09:16:02.000Z","path":"2017/05/30/資訊部門之功能及職責劃分/","text":"第一節 控制目標 定義明確之資訊部門權責，俾使資訊部門有遵循之標準。 公司資訊資源統一利用管理，以達到最佳效用。 為確保本公司各部門對所使用之電子資料自主性，並保持資料之正確與安全。 第二節 風險分析 資訊部門與使用單位權責未劃分，或資訊部門權責不明確。 資訊部門或使用單位未依其權責處理各項作業。 第三節 承辦（權責）單位 資訊部門 第四節 作業程序資訊部門之功能整合全公司電腦資源之運用及資訊安全之管理: 電腦軟／硬體之規劃、評估與維護。 視業務需要統籌規劃及調配公司之電腦軟／硬體。 資訊部門之電腦軟／硬體設備之採購與維護。 資訊網路之規劃、架設與維護。 各類套裝軟體之導入。 應用系統之開發與維護。 公司電子資料安全管理。 資訊部門之職務劃分資訊部門之內部人員編制及所負責職務由資訊部門主管擬訂。依職能區分如下： 資訊部門主管 負責管理資訊部門，主導各項資訊系統更新、建置的規劃及執行。 負責各部門之溝通協調及評估，並檢核各部門業務需求。 系統管理員 負責維護、調校、測試資訊系統，維持系統程式與各應用軟體之正常運作。 負責資訊系統使用者帳號及權限的設定。 程式設計員 應用程式之開發規劃、邏輯流程設計、程式撰寫、測試除錯及編製應用程式之書面文件。 資料庫管理員 負責資料庫之維護、備份、資料回覆。資料庫管理人員負責資料庫之管理，不得與應用程式設計員同一人。 硬體維護員 負責電腦硬體維護、網路架設及維護。 資訊部門與使用部門之權責劃分 資訊部門依使用部門所提需求，進行系統開發、程式設計及系統上線，提供使用部門迅速與確實之資訊。 公司之區域網路、個人電腦由資訊部門統籌調撥管理，各部門使用人員對其所配置之區域網路、個人電腦應負保管之責任，並維護設備清潔。 使用部門負責電腦系統內之資料輸入、更正與報表輸出。 資料庫內資料由使用部門負責維護，非經適當授權，資訊部門不得從事資料之輸入、更正與報表輸出。 資訊部門對使用單位之資料處理負有稽核之責任，若使用者進行錯誤的資料處理，資訊部門可提出稽核報表，提供使用單位進行修正，以維護系統資料的正確性。 第五節 控制重點 資訊部門人員之職掌、資訊部門與使用部門之權責，是否明確劃分。 電子資料處理是否依權責有效執行。 是否訂有年度工作計劃？並定期進行進度追蹤？ 第六節 相關資料 組織圖 第七節 使用表單 關鍵績效指標(KPI)設定表。 年度預算表。","tags":[{"name":"管理辦法","slug":"管理辦法","permalink":"http://localhost:4000/tags/管理辦法/"}]},{"title":"Markdown 语法和 MWeb 写作使用说明","date":"2017-05-29T18:36:52.000Z","path":"2017/05/30/stackedit/","text":"Markdown 的设计哲学 Markdown 的目標是實現「易讀易寫」。不過最需要強調的便是它的可讀性。一份使用 Markdown 格式撰寫的文件應該可以直接以純文字發佈，並且看起來不會像是由許多標籤或是格式指令所構成。Markdown 的語法有個主要的目的：用來作為一種網路內容的寫作用語言。 本文约定如果有写 效果如下：， 在 MWeb 编辑状态下只有用 CMD + 4 或 CMD + R 预览才可以看效果。 标题Markdown 语法： 123# 第一级标题 `&lt;h1&gt;` ## 第二级标题 `&lt;h2&gt;` ###### 第六级标题 `&lt;h6&gt;` 效果如下： 第一级标题 &lt;h1&gt;第二级标题 &lt;h2&gt;第六级标题 &lt;h6&gt;强调Markdown 语法： 12345*这些文字会生成`&lt;em&gt;`*_这些文字会生成`&lt;u&gt;`_**这些文字会生成`&lt;strong&gt;`**__这些文字会生成`&lt;strong&gt;`__ 在 MWeb 中的快捷键为： CMD + U、CMD + I、CMD + B效果如下： 这些文字会生成&lt;em&gt;这些文字会生成&lt;u&gt; 这些文字会生成&lt;strong&gt;这些文字会生成&lt;strong&gt; 换行四个及以上空格加回车。如果不想打这么多空格，只要回车就为换行，请勾选：Preferences - Themes - Translate newlines to &lt;br&gt; tags 列表无序列表Markdown 语法： 1234* 项目一 无序列表 `* + 空格键`* 项目二* 项目二的子项目一 无序列表 `TAB + * + 空格键`* 项目二的子项目二 在 MWeb 中的快捷键为： Option + U效果如下： 项目一 无序列表 * + 空格键 项目二 项目二的子项目一 无序列表 TAB + * + 空格键 项目二的子项目二 有序列表Markdown 语法： 123451. 项目一 有序列表 `数字 + . + 空格键`2. 项目二 3. 项目三1. 项目三的子项目一 有序列表 `TAB + 数字 + . + 空格键`2. 项目三的子项目二 效果如下： 项目一 有序列表 数字 + . + 空格键 项目二 项目三 项目三的子项目一 有序列表 TAB + 数字 + . + 空格键 项目三的子项目二 任务列表（Task lists）Markdown 语法： 12- [ ] 任务一 未做任务 `- + 空格 + [ ]`- [x] 任务二 已做任务 `- + 空格 + [x]` 效果如下： [ ] 任务一 未做任务 - + 空格 + [ ] [x] 任务二 已做任务 - + 空格 + [x] 图片Markdown 语法： 12![GitHub set up](http://zh.mweb.im/asset/img/set-up-git.gif)格式: ![Alt Text](url) Control + Shift + I 可插入Markdown语法。如果是 MWeb 的文档库中的文档，还可以用拖放图片、CMD + V 粘贴、CMD + Option + I 导入这三种方式来增加图片。效果如下： MWeb 引入的特别的语法来设置图片宽度，方法是在图片描述后加 -w + 图片宽度 即可，比如说要设置上面的图片的宽度为 140，语法如下： 链接Markdown 语法： 123email &lt;example@example.com&gt;[GitHub](http://github.com)自动生成连接 &lt;http://www.github.com/&gt; Control + Shift + L 可插入Markdown语法。如果是 MWeb 的文档库中的文档，拖放或CMD + Option + I 导入非图片时，会生成连接。效果如下： Email 连接： &#x65;&#120;&#x61;&#109;&#112;&#108;&#101;&#64;&#x65;&#120;&#x61;&#109;&#x70;&#108;&#101;&#x2e;&#x63;&#x6f;&#109;连接标题Github网站自动生成连接像： http://www.github.com/ 这样 区块引用Markdown 语法： 123某某说:&gt; 第一行引用&gt; 第二行费用文字 CMD + Shift + B 可插入Markdown语法。效果如下： 某某说: 第一行引用第二行费用文字 行内代码Markdown 语法： 1像这样即可：`&lt;addr&gt;` `code` CMD + K 可插入Markdown语法。效果如下： 像这样即可：&lt;addr&gt; code 多行或者一段代码Markdown 语法： 123456function fancyAlert(arg) &#123; if(arg) &#123; $.facebox(&#123;div:'#foo'&#125;) &#125;&#125; CMD + Shift + K 可插入Markdown语法。效果如下： 123456function fancyAlert(arg) &#123; if(arg) &#123; $.facebox(&#123;div:'#foo'&#125;) &#125;&#125; 顺序图或流程图Markdown 语法： &lt;div id=&quot;sequence-0&quot;&gt;&lt;/div&gt; &lt;div id=&quot;flowchart-0&quot; class=&quot;flow-chart&quot;&gt;&lt;/div&gt; 效果如下（ Preferences - Themes - Enable sequence &amp; flow chart 才会看到效果 ）： 更多请参考：http://bramp.github.io/js-sequence-diagrams/, http://adrai.github.io/flowchart.js/ 表格Markdown 语法： 1234第一格表头 | 第二格表头--------- | -------------内容单元格 第一列第一格 | 内容单元格第二列第一格内容单元格 第一列第二格 多加文字 | 内容单元格第二列第二格 效果如下： 第一格表头 第二格表头 内容单元格 第一列第一格 内容单元格第二列第一格 内容单元格 第一列第二格 多加文字 内容单元格第二列第二格 删除线Markdown 语法： 加删除线像这样用： 删除这些 效果如下： 加删除线像这样用： 删除这些 分隔线以下三种方式都可以生成分隔线： 12345********- - - 效果如下： MathJaxMarkdown 语法： 12345678块级公式：$$ x = \\dfrac&#123;-b \\pm \\sqrt&#123;b^2 - 4ac&#125;&#125;&#123;2a&#125; $$\\\\[ \\frac&#123;1&#125;&#123;\\Bigl(\\sqrt&#123;\\phi \\sqrt&#123;5&#125;&#125;-\\phi\\Bigr) e^&#123;\\frac25 \\pi&#125;&#125; =1+\\frac&#123;e&lt;sup&gt;&#123;-2\\pi&#125;&#125; &#123;1+\\frac&#123;e&lt;/sup&gt;&#123;-4\\pi&#125;&#125; &#123;1+\\frac&#123;e^&#123;-6\\pi&#125;&#125;&#123;1+\\frac&#123;e^&#123;-8\\pi&#125;&#125; &#123;1+\\ldots&#125; &#125; &#125; &#125; \\\\]行内公式： $\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$ 效果如下（Preferences - Themes - Enable MathJax 才会看到效果）： 块级公式：$$ x = \\dfrac{-b \\pm \\sqrt{b^2 - 4ac}}{2a} $$ \\[ \\frac{1}{\\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\\frac25 \\pi}} =1+\\frac{e{-2\\pi}} {1+\\frac{e{-4\\pi}} {1+\\frac{e^{-6\\pi}}{1+\\frac{e^{-8\\pi}} {1+\\ldots} } } } \\] 行内公式： $\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$ 脚注（Footnote）Markdown 语法： 1这是一个脚注：[^sample_footnote] 效果如下： 这是一个脚注：^sample_footnote 注释和阅读更多 Actions-&gt;Insert Read More Comment 或者 Command + .注 阅读更多的功能只用在生成网站或博客时，插入时注意要后空一行。 TOCMarkdown 语法： 1[TOC] 效果如下： [TOC] st=>start: 开始 e=>end: 结束 op=>operation: 我的操作 cond=>condition: 确认？ st->op->cond cond(yes)->e cond(no)->op{\"theme\":\"simple\",\"scale\":1,\"line-width\":2,\"line-length\":50,\"text-margin\":10,\"font-size\":12} var code = document.getElementById(\"flowchart-0-code\").value; var options = JSON.parse(decodeURIComponent(document.getElementById(\"flowchart-0-options\").value)); var diagram = flowchart.parse(code); diagram.drawSVG(\"flowchart-0\", options);st=>start: 开始 e=>end: 结束 op=>operation: 我的操作 cond=>condition: 确认？ st->op->cond cond(yes)->e cond(no)->op{\"theme\":\"simple\",\"scale\":1,\"line-width\":2,\"line-length\":50,\"text-margin\":10,\"font-size\":12} var code = document.getElementById(\"flowchart-1-code\").value; var options = JSON.parse(decodeURIComponent(document.getElementById(\"flowchart-1-options\").value)); var diagram = flowchart.parse(code); diagram.drawSVG(\"flowchart-1\", options); 张三->李四: 嘿，小四儿, 写博客了没? Note right of 李四: 李四愣了一下，说： 李四-->张三: 忙得吐血，哪有时间写。{\"theme\":\"simple\",\"scale\":1,\"line-width\":2,\"line-length\":50,\"text-margin\":10,\"font-size\":12} var code = document.getElementById(\"sequence-0-code\").value; var options = JSON.parse(decodeURIComponent(document.getElementById(\"sequence-0-options\").value)); var diagram = Diagram.parse(code); diagram.drawSVG(\"sequence-0\", options);张三->李四: 嘿，小四儿, 写博客了没? Note right of 李四: 李四愣了一下，说： 李四-->张三: 忙得吐血，哪有时间写。{\"theme\":\"simple\",\"scale\":1,\"line-width\":2,\"line-length\":50,\"text-margin\":10,\"font-size\":12} var code = document.getElementById(\"sequence-1-code\").value; var options = JSON.parse(decodeURIComponent(document.getElementById(\"sequence-1-options\").value)); var diagram = Diagram.parse(code); diagram.drawSVG(\"sequence-1\", options);","tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://localhost:4000/tags/Markdown/"}]},{"title":"Hello World","date":"2017-05-27T14:29:33.000Z","path":"2017/05/27/hello-world/","text":"Welcome Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]